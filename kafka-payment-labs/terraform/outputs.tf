output "environment_id" {
  value       = confluent_environment.training.id
  description = "The ID of the Confluent Cloud environment"
}

output "kafka_cluster_id" {
  value       = confluent_kafka_cluster.basic.id
  description = "The ID of the Kafka cluster"
}

output "kafka_bootstrap_servers" {
  value       = confluent_kafka_cluster.basic.bootstrap_endpoint
  description = "Kafka cluster bootstrap servers"
}

output "kafka_rest_endpoint" {
  value       = confluent_kafka_cluster.basic.rest_endpoint
  description = "Kafka cluster REST endpoint"
}

output "kafka_api_key" {
  value       = confluent_api_key.app_kafka_api_key.id
  description = "Kafka API Key"
  sensitive   = true
}

output "kafka_api_secret" {
  value       = confluent_api_key.app_kafka_api_key.secret
  description = "Kafka API Secret"
  sensitive   = true
}

output "schema_registry_url" {
  value       = confluent_schema_registry_cluster.essentials.rest_endpoint
  description = "Schema Registry URL"
}

output "schema_registry_api_key" {
  value       = confluent_api_key.app_schema_registry_api_key.id
  description = "Schema Registry API Key"
  sensitive   = true
}

output "schema_registry_api_secret" {
  value       = confluent_api_key.app_schema_registry_api_key.secret
  description = "Schema Registry API Secret"
  sensitive   = true
}

output "service_account_id" {
  value       = confluent_service_account.app.id
  description = "Service Account ID"
}

# Generate .env file content
output "env_file_content" {
  value = <<-EOT
# Generated by Terraform
# Kafka Configuration
BOOTSTRAP_SERVERS=${confluent_kafka_cluster.basic.bootstrap_endpoint}
SECURITY_PROTOCOL=SASL_SSL
SASL_MECHANISM=PLAIN
SASL_USERNAME=${confluent_api_key.app_kafka_api_key.id}
SASL_PASSWORD=${confluent_api_key.app_kafka_api_key.secret}

# Schema Registry Configuration
SCHEMA_REGISTRY_URL=${confluent_schema_registry_cluster.essentials.rest_endpoint}
SCHEMA_REGISTRY_API_KEY=${confluent_api_key.app_schema_registry_api_key.id}
SCHEMA_REGISTRY_API_SECRET=${confluent_api_key.app_schema_registry_api_key.secret}

# Cluster Information
ENVIRONMENT_ID=${confluent_environment.training.id}
CLUSTER_ID=${confluent_kafka_cluster.basic.id}
KAFKA_REST_ENDPOINT=${confluent_kafka_cluster.basic.rest_endpoint}

# Application Configuration
CONSUMER_GROUP_ID=payment-processor
AUTO_OFFSET_RESET=earliest
EOT
  description = "Content for .env file"
  sensitive   = true
}